\relax 
\citation{1_Montanaro_2017}
\citation{2_Bremner_2010}
\citation{3_Amy_2016}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Workflow Overview}{1}}
\newlabel{sec_methods}{{2}{1}}
\newlabel{ssec_workflow}{{2}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces The high level workflow of the T gate optimization protocol is shown. A Clifford + T circuit is converted to the CNOT+T gate set by introducing ancillas and performing classically controlled Clifford gates. A non-Clifford phase gate is extracted, which maps to a signature tensor upon which the core optimization algorithm is performed. The optimized symmetric tensor decomposition is then converted back into a circuit of the form in panel 2) yielding an implementation of the original Clifford + T circuit with reduced T count. \relax }}{1}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig_overview}{{1}{1}}
\citation{5_Amy_2013}
\citation{6_Amy_2013}
\citation{4_Campbell_2017}
\citation{4_Campbell_2017}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Internal Hadamards are removed by replacing each one according to this circuit identity. The Hadamards on the left-hand circuit are now external and act on an ancilla, therefore they no longer obstruct the \emph  {T-optimiser} algorithms.\relax }}{2}}
\newlabel{fig_hadamards}{{2}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Diagonal CNOT+T Framework}{2}}
\newlabel{ssec_diag}{{3}{2}}
\newlabel{eq_gsm}{{6}{2}}
\newlabel{eq_sig}{{7}{2}}
\newlabel{pr_1}{{3.1}{2}}
\citation{3_Amy_2016}
\citation{4_Campbell_2017}
\citation{8_Lempel_1975}
\citation{8_Lempel_1975}
\@writefile{toc}{\contentsline {section}{\numberline {4}\emph  {T-optimiser}}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Reed-Muller decoder (RM)}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Recursive Expansion (RE)}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Temporary Order Reduction (TOR)}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Third Order Duplicate and Destroy (TODD)}{3}}
\newlabel{lem1}{{4.1}{4}}
\newlabel{e_working1}{{9}{4}}
\newlabel{lem2}{{4.2}{4}}
\newlabel{e_working2}{{14}{5}}
\citation{42_montanaro}
\citation{42_montanaro}
\citation{3_Amy_2016}
\citation{3_Amy_2016}
\citation{3_Amy_2016}
\citation{3_Amy_2016}
\citation{3_Amy_2016}
\citation{3_Amy_2016}
\citation{41_soeken}
\citation{41_soeken}
\citation{41_soeken}
\citation{41_soeken}
\citation{41_soeken}
\citation{41_soeken}
\bibstyle{abbrv}
\bibdata{lempelx_lit}
\bibcite{6_Amy_2013}{1}
\@writefile{toc}{\contentsline {section}{\numberline {5}Results}{6}}
\newlabel{sec_results}{{5}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Circuits generated by the $\mathrm  {CNOT}$ and $T$ gate were randomly generated for varying number of qubits $n$ then optimized by our implementations of RE, TOR and TODD. The average $T$-count for each $n$ over many random circuits are shown on the vertical axis. TODD produces circuit decompositions with the smallest $T$-counts on average but scales the same as the next best algorithm, TOR (Feedback). Both of these algorithms are better than RE by a factor $n$. The difference between the $T$-counts for TODD and TOR (Feedback) converge on a constant $5.5\pm 0.7$ for large $n$. \relax }}{6}}
\newlabel{fig_random}{{3}{6}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces $T$-counts for various universal Clifford + $T$ benchmark circuits as synthesized by the TODD and RE algorithm are shown. $T_{\text  {original}}$ are the best known results produced by the works cited in the \emph  {Circuit} column, and $T_{\text  {TODD}}$ is the result for \emph  {TODD}. \textbf  {$n_{\text  {original}}$} is the number of qubits of the original circuit and \textbf  {$n_{\text  {out}}$} is the total number of qubits of the output circuit including ancillas used to implement multiply controlled Toffoli gates as well as Hadamards using path variables \cite  {42_montanaro}. The total execution time in seconds for \emph  {TODD} run on an \emph  {Intel i7} 2.40Gz processor is given in column \emph  {Time}.\relax }}{6}}
\newlabel{tab_CliffT}{{1}{6}}
\bibcite{5_Amy_2013}{2}
\bibcite{3_Amy_2016}{3}
\bibcite{2_Bremner_2010}{4}
\bibcite{4_Campbell_2017}{5}
\bibcite{8_Lempel_1975}{6}
\bibcite{1_Montanaro_2017}{7}
\bibcite{41_soeken}{8}
\@writefile{toc}{\contentsline {section}{\numberline {6}Discussion}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Conclusion}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {8}Acknowledgements}{7}}
